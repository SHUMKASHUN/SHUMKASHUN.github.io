{"remainingRequest":"/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kashun/Desktop/SHUMKASHUN.github.io/src/components/Portfolio.vue?vue&type=template&id=a9a7cd70&scoped=true&","dependencies":[{"path":"/Users/kashun/Desktop/SHUMKASHUN.github.io/src/components/Portfolio.vue","mtime":1702016522799},{"path":"/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kashun/Desktop/SHUMKASHUN.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}